{"version":3,"file":"jsonp_backend.d.ts","sources":["jsonp_backend.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Observable } from 'rxjs';\nimport { ReadyState } from '../enums';\nimport { Connection, ConnectionBackend } from '../interfaces';\nimport { Request } from '../static_request';\nimport { Response } from '../static_response';\n/**\n * Base class for an in-flight JSONP request.\n *\n * @deprecated see https://angular.io/guide/http\n * @publicApi\n */\nexport declare class JSONPConnection implements Connection {\n    private _dom;\n    private baseResponseOptions?;\n    private _id;\n    private _script;\n    private _responseData;\n    private _finished;\n    /**\n     * The {@link ReadyState} of this request.\n     */\n    readyState: ReadyState;\n    /**\n     * The outgoing HTTP request.\n     */\n    request: Request;\n    /**\n     * An observable that completes with the response, when the request is finished.\n     */\n    response: Observable<Response>;\n    /**\n     * Callback called when the JSONP request completes, to notify the application\n     * of the new data.\n     */\n    finished(data?: any): void;\n}\n/**\n * A {@link ConnectionBackend} that uses the JSONP strategy of making requests.\n *\n * @deprecated see https://angular.io/guide/http\n * @publicApi\n */\nexport declare class JSONPBackend extends ConnectionBackend {\n    private _browserJSONP;\n    private _baseResponseOptions;\n    createConnection(request: Request): JSONPConnection;\n}\n"]}